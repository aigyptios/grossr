{"version":3,"sources":["common/Button.tsx","common/Card.tsx","common/FormElement.tsx","common/Icon.tsx","common/PageHeading.tsx","types/index.ts","app/hooks.ts","features/cases/casesSlice.ts","features/cases/components/CaseActions.tsx","features/cases/components/SpecimenImage.tsx","features/cases/components/ViewCase.tsx","features/cases/components/CaseForm.tsx","app/constants.ts","features/cases/components/CaseList.tsx","features/cases/components/EditCase.tsx","features/cases/components/CreateCase.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["useStyles","createUseStyles","button","border","padding","background","borderRadius","fontSize","fontFamily","textTransform","fontWeight","letterSpacing","color","transition","position","marginTop","marginBottom","borderColor","marginLeft","active","Button","children","onClick","styles","className","card","boxShadow","Card","elementRow","display","flexFlow","labelWrapper","width","verticalAlign","inputWrapper","flex","LabeledDatum","label","icon","Icon","name","classNames","heading","PageHeading","ECaseStatus","useAppDispatch","useDispatch","useAppSelector","useSelector","useCaseFromIdParam","id","Number","useParams","history","useHistory","whichCase","state","cases","find","c","push","casesSlice","createSlice","initialState","reducers","addCase","action","payload","length","deleteCase","filter","submitCase","status","SUBMITTED","acceptCase","APPROVED","rejectCase","REJECTED","resubmitCase","RESUBMITTED","updateCase","map","actions","CaseActions","availableActions","dispatch","CREATED","handler","i","toUpperCase","annotationWrapper","annotationWrapperActive","SpecimenImage","image","onSubmit","useState","currentAnnotation","setCurrentAnnotation","geometry","src","alt","annotations","value","allowTouch","onChange","annotation","undefined","disableAnnotation","disableOverlay","specimenWrapper","maxWidth","marginRight","note","meta","textAlign","fontStyle","ViewCase","firstName","lastName","images","notes","dob","text","split","j","Date","created","toLocaleDateString","lastUpdated","entryField","delete","right","top","font","cursor","CaseForm","initialCaseData","setCaseData","setFirstName","setLastName","setNotes","setImages","setDob","fileRef","useRef","textAreaRef","addSingleImage","file","reader","FileReader","onload","result","annotatedImage","prevImages","readAsDataURL","useEffect","now","type","e","target","accept","Array","prototype","call","current","files","ref","multiple","imageIndex","prevAnnotations","submitAnnotation","index","_","COLLAPSE_WIDTH_SM","table","borderCollapse","borderBottom","paddingLeft","paddingRight","actionColumn","filters","CaseList","setFilter","casesToDisplay","path","EditCase","localCase","setLocalCase","goBack","CreateCase","header","height","justifyContent","logo","minWidth","lineHeight","textShadow","accountInfo","borderLeft","userName","main","alignItems","minHeight","sidebar","paddingTop","flexBasis","navIcon","navLink","textDecoration","borderLeftWidth","navLinkActive","borderLeftColor","page","App","exact","activeClassName","to","store","configureStore","reducer","casesReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d162c5cd.chunk.js","sourcesContent":["import { ReactNode } from \"react\";\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles({\n  button: {\n    border: '1px solid #2b4fd6',\n    padding: '5px 10px',\n    background: 'transparent',\n    borderRadius: '4px',\n    fontSize: '12px',\n    fontFamily: 'inherit',\n    textTransform: 'uppercase',\n    fontWeight: '800',\n    letterSpacing: '1px',\n    color: '#2b4fd6',\n    transition: 'background 300ms, color 100ms',\n    position: 'relative',\n    marginTop: '5px',\n    marginBottom: '5px',\n    '&:hover': {\n      background: '#2b4fd6',\n      color: '#ffffff',\n    },\n    '&:active, &$active': {\n      background: '#5472de',\n      borderColor: '#5472de',\n      color: '#ffffff'\n    },\n    '& + &': {\n      marginLeft: '10px'\n    }\n  },\n  active: {}\n})\n\ninterface IButtonProps { \n  children: ReactNode, \n  onClick?: React.MouseEventHandler<HTMLButtonElement>,\n  active?: boolean\n}\nexport default function Button({ children, onClick, active }: IButtonProps) {\n  const styles = useStyles()\n  return <button className={styles.button + ` ${active ? styles.active : ''}`} onClick={onClick}>{ children }</button>\n}","import { ReactNode } from \"react\";\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles({\n  card: {\n    boxShadow: '0 0 4px #d3d3d3',\n    borderRadius: '3px',\n    padding: '10px',\n    background: '#ffffff'\n  }\n})\n\ninterface ICardProps { children: ReactNode}\nexport default function Card({ children }: ICardProps) {\n  const styles = useStyles();\n  return <div className={styles.card}>{children}</div>\n}\n","import { ReactNode } from \"react\";\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles({\n  elementRow: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n  },\n  labelWrapper: {\n    padding: '10px',\n    width: '150px',\n    '& label': {\n      verticalAlign: 'middle',\n    },\n  },\n  inputWrapper: {\n    padding: '10px',\n    flex: '1 0 0',\n  },\n});\n\ninterface IFormElementProps {\n  label?: string;\n  children: ReactNode;\n}\nexport default function LabeledDatum({ label, children }: IFormElementProps) {\n  const styles = useStyles();\n  return (\n    <div className={styles.elementRow}>\n      <div className={styles.labelWrapper}>\n        {label && <label>{label}</label>}\n      </div>\n      <div className={styles.inputWrapper}>\n        {children}\n      </div>\n    </div>\n  );\n}","import { createUseStyles } from \"react-jss\"\n\ninterface IIconProps {\n  name: string,\n  className?: string\n}\n\nconst useStyles = createUseStyles({\n  icon: {\n    verticalAlign: 'middle'\n  }\n})\n\nexport default function Icon({name, className: classNames}: IIconProps) {\n  const { icon } = useStyles();\n  return <span className={\"material-icons-round \" + (classNames ? `${classNames} ` : ' ') + icon}>{name}</span>\n}","import { ReactNode } from \"react\";\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles({\n  heading: {\n    marginBottom: '15px',\n    color: '#144fd6',\n    letterSpacing: '4px',\n  }\n})\n\ninterface IHeadingProps { children: ReactNode; }\nexport default function PageHeading({ children }: IHeadingProps) {\n  const styles = useStyles();\n  return <h1 className={styles.heading}>{children}</h1>;\n}\n","import { IAnnotation } from \"react-image-annotation\";\nexport type { IAnnotation } from \"react-image-annotation\"\n\n// export interface IAnnotation {\n  //   selection: any,\n  //   geometry: {\n  //     type: string\n  //   },\n  //   data: string\n// }\n\nexport interface IAnnotatedImage {\n  id: number,\n  src: string,\n  alt: string,\n  annotations?: IAnnotation[]\n}\n\nexport interface INote {\n  text: string\n}\n\nexport enum ECaseStatus {\n  CREATED,\n  SUBMITTED,\n  RESUBMITTED,\n  APPROVED,\n  REJECTED\n}\n\nexport interface ICaseMetaData {\n  created: number,\n  lastUpdated?: number\n}\n\nexport interface ICase {\n  firstName: string,\n  lastName: string,\n  id: number,\n  notes: INote[],\n  images: IAnnotatedImage[],\n  status: ECaseStatus,\n  dob: string,\n  meta: ICaseMetaData\n}","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport type { RootState, AppDispatch } from './store';\n\n// Provided by create-react-app redux-typescript template\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n// Homemade Hooks!\nexport type TCaseIDParams = { id: string }\nexport const useIdParam = () => Number(useParams<TCaseIDParams>().id)\n\nexport const useCaseFromIdParam = () => {\n  const id = useIdParam();\n  const history = useHistory();\n  const whichCase = useAppSelector( state => state.cases.cases.find(c => c.id === id ))\n  if (whichCase) return whichCase\n  else history.push('/')\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ECaseStatus, ICase } from '../../types';\n\nexport interface ICasesState {\n  cases: ICase[]\n}\n\nconst initialState: ICasesState = {\n  cases: []\n};\n\nexport const casesSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    addCase: (state, action: PayloadAction<ICase>) => {\n      state.cases.push({...action.payload, id: state.cases.length + 100001});\n    },\n    deleteCase: (state, action: PayloadAction<number>) => {\n      state.cases = state.cases.filter( c => c.id !== action.payload);\n    },\n    submitCase: (state, action: PayloadAction<number>) => {\n      state.cases.find(c => c.id === action.payload)!.status = ECaseStatus.SUBMITTED\n    },\n    acceptCase: (state, action: PayloadAction<number>) => {\n      state.cases.find(c => c.id === action.payload)!.status = ECaseStatus.APPROVED\n    },\n    rejectCase: (state, action: PayloadAction<number>) => {\n      state.cases.find(c => c.id === action.payload)!.status = ECaseStatus.REJECTED\n    },\n    resubmitCase: (state, action: PayloadAction<number>) => {\n      state.cases.find(c => c.id === action.payload)!.status = ECaseStatus.RESUBMITTED\n    },\n    updateCase: (state, action: PayloadAction<ICase>) => {\n      state.cases = state.cases.map( c => {\n        if ( c.id === action.payload.id ) {\n          return action.payload\n        } else {\n          return c\n        }\n      })\n    },\n  },\n});\n\nexport const { addCase, deleteCase, submitCase, acceptCase, rejectCase, resubmitCase, updateCase } = casesSlice.actions;\n\nexport default casesSlice.reducer;\n","import { useHistory } from \"react-router-dom\"\nimport { useAppDispatch } from \"../../../app/hooks\"\nimport { Button } from \"../../../common\"\nimport { ECaseStatus, ICase } from \"../../../types\"\nimport { acceptCase, deleteCase, rejectCase, resubmitCase, submitCase } from \"../casesSlice\"\n\ntype TCaseAction = {\n  label: string,\n  handler: (() => void)\n}\n\ninterface ICaseActionsProps {\n  whichCase: ICase\n}\nexport default function CaseActions({ whichCase }: ICaseActionsProps) {\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const { id, status } = whichCase;\n\n  let availableActions: TCaseAction[];\n  switch(status) {\n    case ECaseStatus.CREATED:\n      availableActions = [\n        { label: 'submit', handler: () => dispatch(submitCase(id)) },\n        { label: 'edit', handler: () => history.push(`/case/${id}/edit`) }\n      ]\n      break;\n    case ECaseStatus.SUBMITTED:\n    case ECaseStatus.RESUBMITTED:\n      availableActions = [\n        { label: 'approve', handler: () => dispatch(acceptCase(id)) },\n        { label: 'reject', handler: () => dispatch(rejectCase(id)) }\n      ]\n      break;\n    case ECaseStatus.REJECTED:\n      availableActions = [\n        { label: 'resubmit', handler: () => dispatch(resubmitCase(id)) },\n        { label: 'edit', handler: () => history.push(`/case/${id}/edit`) }]\n      break;\n    default:\n      availableActions = []\n  }\n  availableActions.push({\n    label: 'delete', handler: () => dispatch(deleteCase(id))\n  })\n  return <>\n    { availableActions.map( ({handler, label}, i) => <Button key={i} onClick={handler}>{ label.toUpperCase() }</Button>) }\n  </>\n}","import { useState } from \"react\";\nimport { IAnnotatedImage, IAnnotation } from \"../../../types\";\nimport Annotation from 'react-image-annotation';\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles({\n  annotationWrapper: {\n    marginBottom: '0px',\n    transition: 'margin 300ms',\n    background: '#dddddd',\n    borderRadius: '3px',\n    border: '1px solid #ddd',\n    '&:hover': {\n      marginBottom: '150px',\n    }\n  },\n  annotationWrapperActive: {\n    marginBottom: '150px'\n  }\n})\n\ninterface ISpecimenImageProps {\n  image: IAnnotatedImage;\n  onSubmit?: (arg0: IAnnotation) => void\n}\nexport default function SpecimenImage({ image, onSubmit }: ISpecimenImageProps) {\n\n  const [currentAnnotation, setCurrentAnnotation] = useState<IAnnotation | any>({});\n  const styles = useStyles();\n  \n  const submit = (annotation: IAnnotation) => {\n    onSubmit!(annotation);\n    setCurrentAnnotation({});\n  };\n\n  return (\n    <div className={`${styles.annotationWrapper} ${currentAnnotation.geometry ? styles.annotationWrapperActive : ''}`}>\n      <Annotation\n        src={image.src}\n        alt={image.alt}\n        annotations={image.annotations || []}\n        value={currentAnnotation}\n        allowTouch={true}\n        onChange={setCurrentAnnotation}\n        onSubmit={onSubmit ? submit : undefined} \n        disableAnnotation={!onSubmit}\n        disableOverlay={!onSubmit}\n      />\n    </div>\n  );\n}\n","import { useCaseFromIdParam } from \"../../../app/hooks\";\nimport { PageHeading, Card, FormElement } from \"../../../common\";\nimport CaseActions from \"./CaseActions\";\nimport SpecimenImage from \"./SpecimenImage\";\nimport { createUseStyles } from \"react-jss\";\nimport { ECaseStatus } from \"../../../types\";\n\nconst useStyles = createUseStyles({\n  specimenWrapper: {\n    width: '100%',\n    maxWidth: '600px',\n    marginTop: '10px',\n    marginRight: '10px',\n    position: 'relative',\n  },\n  note: {\n    background: '#f0f8ff',\n    padding: '5px 25px 5px 5px',\n    marginBottom: '5px',\n    borderRadius: '3px',\n    position: 'relative',\n  },\n  meta: {\n    textAlign: 'center',\n    fontStyle: 'italic',\n    fontSize: '12px',\n    marginTop: '10px'\n  }\n})\n\nexport default function ViewCase() {\n  const whichCase = useCaseFromIdParam();\n  const styles = useStyles();\n  if (whichCase) {\n    const { firstName, lastName, images, notes, dob, status, meta } = whichCase;\n    return (\n      <div>\n        <PageHeading>{firstName} {lastName}</PageHeading>\n        <Card>\n          <FormElement label=\"First Name\">{firstName}</FormElement>\n          <FormElement label=\"Last Name\">{lastName}</FormElement>\n          <FormElement label=\"Date of Birth\">{dob}</FormElement>\n          <FormElement label=\"Specimen\">\n            {images.map((image, i) =>\n              <div key={i} className={styles.specimenWrapper}>\n                <SpecimenImage \n                  image={image}\n                />\n              </div>\n            )}\n          </FormElement>\n          <FormElement label=\"Notes\">\n            {notes.map((note, i) =>\n              <p className={styles.note} key={i}>\n                {note.text.split('\\n').map( (text, j) => <span key={j}>{text}<br /></span>)}\n              </p>\n            )}\n          </FormElement>\n          <FormElement label=\"Status\">\n            {ECaseStatus[status]}\n          </FormElement>\n          <FormElement>\n            <CaseActions whichCase={whichCase} />\n          </FormElement>\n        </Card>\n        <p className={styles.meta}>Created at {new Date(meta.created).toLocaleDateString()}. {meta.lastUpdated && `Last edited ${new Date(meta.lastUpdated).toLocaleDateString()}`}</p>\n      </div>\n    );\n  } else {\n    return null;\n  }\n\n}","import { ChangeEvent, useEffect, useRef, useState } from \"react\";\nimport { ECaseStatus, ICase, IAnnotatedImage, IAnnotation } from \"../../../types\";\nimport { FormElement, Button } from \"../../../common\";\nimport SpecimenImage from \"./SpecimenImage\";\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles({\n  entryField: {\n    padding: '10px',\n    borderRadius: '3px',\n    border: '1px solid #ddd',\n    width: '100%',\n    fontSize: '16px',\n    fontFamily: 'inherit',\n  },\n  delete: {\n    position: 'absolute',\n    right: '10px',\n    top: '5px',\n    border: 'none',\n    background: 'transparent',\n    font: 'inherit',\n    color: 'inherit',\n    cursor: 'pointer'\n  },\n  note: {\n    background: '#f0f8ff',\n    padding: '5px 25px 5px 5px',\n    marginBottom: '5px',\n    borderRadius: '3px',\n    position: 'relative',\n  },\n  specimenWrapper: {\n    width: '100%',\n    maxWidth: '600px',\n    marginTop: '10px',\n    marginRight: '10px',\n    position: 'relative',\n  }\n})\n\ninterface IEditCaseFormProps {\n  initialCaseData?: ICase;\n  setCaseData: (arg0: ICase) => void;\n}\n\nexport default function CaseForm({ initialCaseData, setCaseData }: IEditCaseFormProps) {\n  const     [firstName, setFirstName] = useState(initialCaseData?.firstName || '');\n  const       [lastName, setLastName] = useState(initialCaseData?.lastName || '');\n  const             [notes, setNotes] = useState(initialCaseData?.notes || []);\n  const           [images, setImages] = useState(initialCaseData?.images || []);\n  const                 [dob, setDob] = useState(initialCaseData?.dob || '');\n\n  const     fileRef = useRef<HTMLInputElement>(null);\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  const styles = useStyles();\n\n  const addImages = () => {\n    Array.prototype.map.call(fileRef.current?.files, addSingleImage);\n  };\n\n  const removeImage = (index: number) => {\n    setImages(images.filter((_, i) => i !== index))\n  }\n\n  const submitAnnotation = (imageIndex: number, annotation: IAnnotation) => {\n    const annotatedImage = images[imageIndex];\n    const prevAnnotations = annotatedImage.annotations || [];\n    setImages(images.map((image, i) => {\n      if (i !== imageIndex)\n        return image;\n      else\n        return {...image, annotations: [...prevAnnotations, annotation]};\n    }));\n  }\n\n  const addSingleImage = (file: File) => {\n    var reader = new FileReader();\n    reader.onload = () => {\n      if (reader.result) {\n        const url = reader.result as string;\n        const annotatedImage: IAnnotatedImage = {\n          src: url,\n          alt: `Image for specimen ${images.length + 1}`,\n          id: images.length + 1,\n          annotations: []\n        }\n        setImages(prevImages => [...prevImages, annotatedImage]);\n      }\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const addNote = () => {\n    setNotes([...notes, { text: textAreaRef.current!.value }])\n    textAreaRef.current!.value = '';\n  }\n  const removeNote = (index: number) => {\n    setNotes(notes.filter((_, i) => i !== index))\n  }\n\n  useEffect(() => {\n    setCaseData({\n      firstName,\n      lastName,\n      dob,\n      images,\n      notes,\n      id: initialCaseData?.id || 0,\n      status: ECaseStatus.CREATED,\n      meta: {\n        created: initialCaseData?.meta.created || Date.now(),\n        lastUpdated: initialCaseData?.id ? Date.now() : undefined\n      }\n    });\n  }, [firstName, lastName, notes, images, dob, initialCaseData?.id, initialCaseData?.meta.created, setCaseData]);\n\n  return (\n    <>\n      <FormElement label=\"First Name\">\n        <input className={styles.entryField} type=\"text\" value={firstName} onChange={(e: ChangeEvent<HTMLInputElement>) => setFirstName(e.target.value)} />\n      </FormElement>\n      <FormElement label=\"Last Name\">\n        <input className={styles.entryField} type=\"text\" value={lastName} onChange={(e: ChangeEvent<HTMLInputElement>) => setLastName(e.target.value)} />\n      </FormElement>\n      <FormElement label=\"Date of Birth\">\n        <input className={styles.entryField} type=\"date\" value={dob} onChange={(e: ChangeEvent<HTMLInputElement>) => setDob(e.target.value)} />\n      </FormElement>\n      <FormElement label=\"Specimen\">\n        <input className={styles.entryField} type=\"file\" accept=\"image/*\" name=\"addImages\" id=\"addImages\" onChange={addImages} ref={fileRef} multiple />\n        {images.map((image, i) =>\n          <div key={i} className={styles.specimenWrapper}>\n            <SpecimenImage \n              image={image}\n              onSubmit={(annotation: IAnnotation) => submitAnnotation(i, annotation)}\n            />\n            <button className={styles.delete} onClick={() => removeImage(i)}>&times;</button>\n          </div>\n        )}\n      </FormElement>\n      <FormElement label=\"Notes\">\n        {notes.map((note, i) =>\n          <p className={styles.note} key={i}>\n            {note.text.split('\\n').map( (text, j) => <span key={j}>{text}<br /></span>)}\n            <button className={styles.delete} onClick={() => removeNote(i)}>&times;</button>\n          </p>\n        )}\n        <textarea className={styles.entryField} ref={textAreaRef}></textarea><Button onClick={addNote}>Add Note</Button>\n      </FormElement>\n    </>\n  );\n}\n\n","export const COLLAPSE_WIDTH_SM = 615;\nexport const COLLAPSE_WIDTH_MD = 1024;","import { useHistory } from \"react-router-dom\";\nimport { useAppSelector } from \"../../../app/hooks\";\nimport { ECaseStatus, ICase } from \"../../../types\";\nimport { PageHeading, Card, Button } from \"../../../common\";\nimport CaseActions from \"./CaseActions\";\nimport { createUseStyles } from \"react-jss\";\nimport { useState } from \"react\";\nimport { COLLAPSE_WIDTH_MD } from \"../../../app/constants\";\n\n\nconst useStyles = createUseStyles({\n  table: {\n    width: 'calc(100% + 20px)',\n    textAlign: 'left',\n    marginLeft: '-10px',\n    marginRight: '-10px',\n    borderCollapse: 'collapse',\n    '& td, & th': {\n      padding: '5px',\n      borderBottom: '1px solid #dddddd',\n    },\n    '& td:first-child, th:first-child': {\n      paddingLeft: '20px',\n      textAlign: 'left',\n    },\n    '& td:last-child, th:last-child': {\n      paddingRight: '20px',\n      textAlign: 'right',\n    },\n    '& tr:hover': {\n      background: '#efefef'\n    },\n    [`& td:nth-child(3),\n    & td:nth-child(4),\n    & td:nth-child(5),\n    & td:nth-child(6),\n    & td:nth-child(7),\n    & td:nth-child(9),\n    & th:nth-child(3),\n    & th:nth-child(4),\n    & th:nth-child(5),\n    & th:nth-child(6),\n    & th:nth-child(7),\n    & th:nth-child(9)`]: {\n      [`@media screen and (max-width: ${COLLAPSE_WIDTH_MD}px)`]: {\n        display: 'none'\n      }\n    }\n  },\n  actionColumn: {\n    textAlign: 'right'\n  },\n  filters: {\n    marginBottom: '10px',\n  }\n});\n\nconst filters = {\n  [ECaseStatus.CREATED]: (c: ICase) => c.status === ECaseStatus.CREATED,\n  [ECaseStatus.SUBMITTED]: (c: ICase) => (c.status === ECaseStatus.SUBMITTED || c.status === ECaseStatus.RESUBMITTED),\n  [ECaseStatus.RESUBMITTED]: (c: ICase) => (c.status === ECaseStatus.SUBMITTED || c.status === ECaseStatus.RESUBMITTED),\n  [ECaseStatus.REJECTED]: (c: ICase) => c.status === ECaseStatus.REJECTED,\n  [ECaseStatus.APPROVED]: (c: ICase) => c.status === ECaseStatus.APPROVED,\n}\n\nexport default function CaseList() {\n  const history = useHistory();\n  const cases = useAppSelector(state => state.cases.cases);\n  const [filter, setFilter] = useState<ECaseStatus | undefined>();\n  const styles = useStyles();\n\n  const casesToDisplay = filter ? cases.filter(filters[filter]) : cases;\n\n  const goTo = (path: string) => {\n    history.push(path);\n  }\n\n  return (<>\n    <PageHeading>Cases</PageHeading>\n    <div className={styles.filters}>\n      <Button active={filter === undefined} onClick={() => setFilter(undefined)}>All</Button>\n      <Button active={filter === ECaseStatus.CREATED} onClick={() => setFilter(ECaseStatus.CREATED)}>Active</Button>\n      <Button active={filter === ECaseStatus.SUBMITTED} onClick={() => setFilter(ECaseStatus.SUBMITTED)}>Submitted</Button>\n      <Button active={filter === ECaseStatus.REJECTED} onClick={() => setFilter(ECaseStatus.REJECTED)}>Rejected</Button>\n      <Button active={filter === ECaseStatus.APPROVED} onClick={() => setFilter(ECaseStatus.APPROVED)}>Approved</Button>\n    </div>\n    <Card>\n      <>\n      { casesToDisplay.length ? \n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th></th>\n              <th>ID</th>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Date of Birth</th>\n              <th>Status</th>\n              <th>Specimen</th>\n              <th className={styles.actionColumn}>Actions</th>\n              <th>Last Updated</th>\n            </tr>\n          </thead>\n          <tbody>\n            {casesToDisplay.map((c: ICase, i) => (\n              <tr key={i}>\n                <td><Button onClick={() => goTo(`/case/${c.id}`)}>View</Button></td>\n                <td>{c.id}</td>\n                <td>{c.firstName}</td>\n                <td>{c.lastName}</td>\n                <td>{c.dob}</td>\n                <td>{ECaseStatus[c.status]}</td>\n                <td>{c.images.length}</td>\n                <td className={styles.actionColumn}>\n                  <CaseActions whichCase={c}/>\n                </td>\n                <td>{new Date(c.meta.lastUpdated || c.meta.created).toLocaleDateString()}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      :\n        <p>No cases to display.</p>\n      }\n      </>\n    </Card>\n  </>);\n}\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAppDispatch, useCaseFromIdParam } from \"../../../app/hooks\";\nimport { PageHeading, Card, Button, FormElement } from \"../../../common\";\nimport { ICase } from \"../../../types\";\nimport { updateCase } from \"../casesSlice\";\nimport CaseForm from \"./CaseForm\";\n\nexport default function EditCase() {\n\n  const   dispatch = useAppDispatch();\n  const  whichCase = useCaseFromIdParam();\n  const    history = useHistory();\n\n  const [localCase, setLocalCase] = useState<ICase | undefined>(whichCase);\n\n  const save = () => {\n    dispatch(updateCase(localCase!));\n    history.push(`/case/${whichCase!.id}`);\n  }\n\n  return (\n    whichCase ? <div>\n      <PageHeading>Edit Case (ID: {whichCase.id})</PageHeading>\n      <Card>\n        <CaseForm initialCaseData={whichCase} setCaseData={setLocalCase}/>\n        <FormElement>\n          <Button onClick={() => history.goBack()}>Cancel</Button>\n          <Button onClick={save}>Save</Button>\n        </FormElement>\n      </Card>\n    </div>\n    : null\n  );\n}","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../app/hooks\";\nimport { Button, Card, FormElement, PageHeading } from \"../../../common\";\nimport { ICase } from \"../../../types\";\nimport { addCase } from \"../casesSlice\";\nimport CaseForm from \"./CaseForm\";\n\nexport default function CreateCase() {\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n\n  const [localCase, setLocalCase] = useState<ICase>()\n\n  const save = () => {\n    if (localCase) dispatch(addCase(localCase))\n    history.push('/cases');\n  }\n\n  const cancel = () => {\n    history.goBack();\n  }\n\n  return (\n    <div>\n      <PageHeading>Create Case</PageHeading>\n      <Card>\n        <CaseForm setCaseData={setLocalCase} />\n        <FormElement>\n          <Button onClick={cancel}>Cancel</Button>\n          <Button onClick={save}>Save</Button>\n        </FormElement>\n      </Card>\n    </div>\n  );\n}\n","import { createUseStyles } from \"react-jss\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  NavLink\n} from \"react-router-dom\";\nimport { Icon } from \"./common\";\nimport { EditCase, CaseList, ViewCase, CreateCase } from \"./features/cases\";\nimport { COLLAPSE_WIDTH_SM } from \"./app/constants\";\n\nconst useStyles = createUseStyles({\n  header: {\n    height: '50px',\n    boxShadow: '0 0 4px #d3d3d3',\n    display: 'flex',\n    justifyContent: 'space-between',\n    background: '#ffffff',\n  },\n  logo: {\n    color: '#144fd6',\n    fontWeight: '800',\n    minWidth: '200px',\n    textAlign: 'center',\n    height: '100%',\n    fontFamily: 'Josefin Sans',\n    textTransform: 'uppercase',\n    fontSize: '30px',\n    lineHeight: '1.8',\n    textShadow: '2px 2px #a9b8ef',\n  },\n  accountInfo: {\n    fontSize: '14px',\n    padding: '12px',\n    fontWeight: '800',\n    borderLeft: '1px solid #d3d3d3',\n    background: '#ffffff',\n  },\n  userName: {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    marginLeft: '5px',\n    [`@media screen and (max-width: ${COLLAPSE_WIDTH_SM}px)`]: {\n      display: 'none !important',\n    },\n  },\n  main: {\n    display: 'flex',\n    alignItems: 'stretch',\n    minHeight: 'calc(100vh - 50px)',\n    [`@media screen and (max-width: ${COLLAPSE_WIDTH_SM}px)`]: {\n      flexFlow: 'column',\n    },\n  },\n  sidebar: {\n    flex: '0 0 200px',\n    color: '#ffffff',\n    background: '#144fd6',\n    paddingTop: '35px',\n    [`@media screen and (max-width: ${COLLAPSE_WIDTH_SM}px)`]: {\n      padding: 0,\n      flexBasis: 0\n    },\n  },\n  navIcon: {\n    display: 'inline-block',\n    marginRight: '15px',\n  },\n  navLink: {\n    color: '#ffffff',\n    textTransform: 'uppercase',\n    fontWeight: '800',\n    letterSpacing: '2px',\n    fontSize: '14px',\n    textDecoration: 'none',\n    display: 'inline-block',\n    padding: '20px',\n    width: '100%',\n    borderLeft: '4px solid #144fd6',\n    [`@media screen and (max-width: ${COLLAPSE_WIDTH_SM}px)`]: {\n      borderLeftWidth: 0,\n    },\n  },\n  navLinkActive: {\n    background: '#5472de',\n    borderLeftColor: '#ffffff'\n  },\n  page: {\n    padding: '30px',\n    flex: '1 0 0',\n  },\n})\n\nexport default function App() {\n  const styles = useStyles();\n  return (\n    <Router>\n      <header className={styles.header}>\n        <div className={styles.logo}>Grossr</div>\n        <div className={styles.accountInfo}>\n          <Icon name=\"person\" />\n          <span className={styles.userName}>Tessie Technician</span>\n        </div>\n      </header>\n      <main className={styles.main}>\n        <aside className={styles.sidebar}>\n          <nav>\n            <ul>\n              <li>\n                <NavLink exact className={styles.navLink} activeClassName={styles.navLinkActive} to=\"/cases\">\n                  <Icon className={styles.navIcon} name=\"list_alt\" />\n                  Cases\n                </NavLink>\n              </li>\n              <li>\n                <NavLink exact className={styles.navLink} activeClassName={styles.navLinkActive} to=\"/cases/create\">\n                  <Icon className={styles.navIcon} name=\"playlist_add\" />\n                  Add Case\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n        </aside>\n        <section className={styles.page}>\n          <Switch>\n            <Route exact path=\"/cases\">\n              <CaseList />\n            </Route>\n            <Route path=\"/cases/create\">\n              <CreateCase />\n            </Route>\n            <Route path=\"/case/:id\">\n              <Switch>\n                <Route exact path={'/case/:id'}>\n                  <ViewCase />\n                </Route>\n                <Route path={'/case/:id/edit'}>\n                  <EditCase />\n                </Route>\n              </Switch>\n            </Route>\n            <Route path={[\"*\"]} >\n              <Redirect to=\"/cases\" />\n            </Route>\n          </Switch>\n        </section>\n      </main>\n    </Router>\n  );\n}","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport casesReducer from '../features/cases/casesSlice';\n\nexport const store = configureStore({\n  reducer: {\n    cases: casesReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}